{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Alarm allows you to use any media player such as Alexa or Google Home to make them act as an alarm system at home. It also supports the notification system to alert you if you are not at home. Documentation This security system keep listening the window and door sensors that are installed in your smart home system and the safe mode input. If the safe mode is active and some of windows or doors are opened, the user has a few seconds to indentify himself into the system. ( see link ) If the user cannot identify himself into the system, the alarm will be fired on the media player and the user will be notified that an unathorized user has been entered to his house. Example This is a quick example about how to configure the application with 2 Alexas as media players, 2 window/door sensors and 1 motion sensor. home_alarm : module : home_alarm class : HomeAlarm sensors : - binary_sensor.livingroom_window_contact - binary_sensor.entrance_door_contact - binary_sensor.entrance_motion_occupancy safe_mode : input_boolean.safe_mode alerts : - id : media_player sound : amzn_sfx_scifi_alarm_04 loop_delay : 4 media_players : - media_player.alexa - media_player.alexa2 - id : notifier notifiers : - notify.mobile_app_iphone - notify.notifier","title":"Home"},{"location":"#documentation","text":"This security system keep listening the window and door sensors that are installed in your smart home system and the safe mode input. If the safe mode is active and some of windows or doors are opened, the user has a few seconds to indentify himself into the system. ( see link ) If the user cannot identify himself into the system, the alarm will be fired on the media player and the user will be notified that an unathorized user has been entered to his house.","title":"Documentation"},{"location":"#example","text":"This is a quick example about how to configure the application with 2 Alexas as media players, 2 window/door sensors and 1 motion sensor. home_alarm : module : home_alarm class : HomeAlarm sensors : - binary_sensor.livingroom_window_contact - binary_sensor.entrance_door_contact - binary_sensor.entrance_motion_occupancy safe_mode : input_boolean.safe_mode alerts : - id : media_player sound : amzn_sfx_scifi_alarm_04 loop_delay : 4 media_players : - media_player.alexa - media_player.alexa2 - id : notifier notifiers : - notify.mobile_app_iphone - notify.notifier","title":"Example"},{"location":"identification/","text":"RFID Identification system In this section it is shown the RFID identification system and how it works with Home Alarm. It is a handmade system that anyone can make it at their homes using basic and cheap components. Components ESP32: This is the brain of the system. It is a microcontroller board that connects RFID reader and sends/reads MQTT messages to/from our Home Assitant MQTT broker. RC522: RFID Card reader. RFID Tag: Passive device that identifies a person in the system. Green LED: Led component to know visually if the safe_mode is activated or not. Resistor 100 Ohms: To limit the intensity passing through the LED. Jumpers: To wire components. Protoboard: To connect all the components and test the environment. Schemas Left connections: Pin 2 (GND) ESP32 - LED cathode (the shorter leg of the LED) [black wire] Pin 4 (GPIO12) ESP32 - Resistor 100 Ohms - LED anode (the longer leg of the LED) [gray wire] Right connections: Pin 1 (VDD 3V3) ESP32 - 3.3V RC522 [red wire] Pin 2 (GND) ESP32 - GND RC522 [gray wire] Pin 9 (GPIO18) ESP32 - SCK RC522 [violet wire] Pin 10 (GPIO19) ESP32 - MISO RC522 [violet wire] Pin 11 (GPIO21) ESP32 - SDA RC522 [green wire] Pin 14 (GPIO22) ESP32 - RST RC522 [orange wire] Pin 15 (GPIO23) ESP32 - MOSI RC522 [yellow wire] Installation For having this system working it is needed the ESPHome integration installed in HA, the safe_mode input boolean created in HA and the MQTT broker. First of all we need to flash our ESP32 through the ESPHome integration. For doing that we have to connect the ESP32 to an USB port from our HA (just for the first load, after that we will be able to flash it through OTA). For flashing correctly the ESP32 it is need two files, the ESPHome configuration file and our custom file that contains all the logic of our app. These files are placed in /config/esphome/ directory. Alternativelly you can add a secrets.yaml file to that folder to keep save your WiFi and MQTT passwords and others. Once you have it you can flash your ESP32 via USB and remember that some ESP32 the boot button has to be pressed to flash the software correclty. Now you will be able to see two new entities in our Home Assistant that are rfid_real_time and rfid_last_read . Then, we can add an automation for controlling the safe_mode with the rfid_real_time . You just need to know the ids of your RFID tags that can be obtained through ESPHome integration and logs. Add the automation . Tip User can add multiple RFID tags just adding their IDs to the automation file in value_template concatenating or . How it works? This RFID identification system is a complementary app that can be used with Home Alarm. The purpose of that is to active or disarm the alarm using the RFID system working with the safe_mode input. One can activate the House safe mode just moving closer its RFID tag to RFID reader. User will know that the save mode is activated just watching if the green LED is on, otherwise it means that safe mode is not activated. Info Remember that for Home Alarm we have a configuration variable that is call safe_mode_delay in apps.yaml . You can configure this variable to activate your Home safe mode with a delay in order to have time to leave the house. In that time, the alarm won't be fired. ESP32 is subscribed to an MQTT topic in order to know if the safe_mode is activated or not and toggle the LED when the state changes. Our automation created reads the RFID tag id and check if there is a known tag and in positive case publish an MQTT message for activate or deactivate safe mode. Info If alarm is fired and you are at home, you can disarm it by moving closer the RFID tag to the reader in order to deactivate the safe_mode input. Files Configuration file ESP32 App Automation","title":"Identification"},{"location":"identification/#rfid-identification-system","text":"In this section it is shown the RFID identification system and how it works with Home Alarm. It is a handmade system that anyone can make it at their homes using basic and cheap components.","title":"RFID Identification system"},{"location":"identification/#components","text":"ESP32: This is the brain of the system. It is a microcontroller board that connects RFID reader and sends/reads MQTT messages to/from our Home Assitant MQTT broker. RC522: RFID Card reader. RFID Tag: Passive device that identifies a person in the system. Green LED: Led component to know visually if the safe_mode is activated or not. Resistor 100 Ohms: To limit the intensity passing through the LED. Jumpers: To wire components. Protoboard: To connect all the components and test the environment.","title":"Components"},{"location":"identification/#schemas","text":"Left connections: Pin 2 (GND) ESP32 - LED cathode (the shorter leg of the LED) [black wire] Pin 4 (GPIO12) ESP32 - Resistor 100 Ohms - LED anode (the longer leg of the LED) [gray wire] Right connections: Pin 1 (VDD 3V3) ESP32 - 3.3V RC522 [red wire] Pin 2 (GND) ESP32 - GND RC522 [gray wire] Pin 9 (GPIO18) ESP32 - SCK RC522 [violet wire] Pin 10 (GPIO19) ESP32 - MISO RC522 [violet wire] Pin 11 (GPIO21) ESP32 - SDA RC522 [green wire] Pin 14 (GPIO22) ESP32 - RST RC522 [orange wire] Pin 15 (GPIO23) ESP32 - MOSI RC522 [yellow wire]","title":"Schemas"},{"location":"identification/#installation","text":"For having this system working it is needed the ESPHome integration installed in HA, the safe_mode input boolean created in HA and the MQTT broker. First of all we need to flash our ESP32 through the ESPHome integration. For doing that we have to connect the ESP32 to an USB port from our HA (just for the first load, after that we will be able to flash it through OTA). For flashing correctly the ESP32 it is need two files, the ESPHome configuration file and our custom file that contains all the logic of our app. These files are placed in /config/esphome/ directory. Alternativelly you can add a secrets.yaml file to that folder to keep save your WiFi and MQTT passwords and others. Once you have it you can flash your ESP32 via USB and remember that some ESP32 the boot button has to be pressed to flash the software correclty. Now you will be able to see two new entities in our Home Assistant that are rfid_real_time and rfid_last_read . Then, we can add an automation for controlling the safe_mode with the rfid_real_time . You just need to know the ids of your RFID tags that can be obtained through ESPHome integration and logs. Add the automation . Tip User can add multiple RFID tags just adding their IDs to the automation file in value_template concatenating or .","title":"Installation"},{"location":"identification/#how-it-works","text":"This RFID identification system is a complementary app that can be used with Home Alarm. The purpose of that is to active or disarm the alarm using the RFID system working with the safe_mode input. One can activate the House safe mode just moving closer its RFID tag to RFID reader. User will know that the save mode is activated just watching if the green LED is on, otherwise it means that safe mode is not activated. Info Remember that for Home Alarm we have a configuration variable that is call safe_mode_delay in apps.yaml . You can configure this variable to activate your Home safe mode with a delay in order to have time to leave the house. In that time, the alarm won't be fired. ESP32 is subscribed to an MQTT topic in order to know if the safe_mode is activated or not and toggle the LED when the state changes. Our automation created reads the RFID tag id and check if there is a known tag and in positive case publish an MQTT message for activate or deactivate safe mode. Info If alarm is fired and you are at home, you can disarm it by moving closer the RFID tag to the reader in order to deactivate the safe_mode input.","title":"How it works?"},{"location":"identification/#files","text":"Configuration file ESP32 App Automation","title":"Files"},{"location":"installation/","text":"Installation Home Alarm runs on AppDeamon, so you have to have installed it in your HA environment. HACS To install Home Alarm easily I recommend to install it by HACS. You need to enable AppDeamon Apps in your HACS integration and then search the repository by name. Manual To install Home Alarm manually you have to download the home_alarm directory inside apps folder, copy it to your /config/appdeamon/apps directory in HA and rename it to home-alarm . You must restart AppDeamon. Updates When updating the app is important to restart AppDeamon integration from Supervisor. What's next? configuration","title":"Installation"},{"location":"installation/#installation","text":"Home Alarm runs on AppDeamon, so you have to have installed it in your HA environment.","title":"Installation"},{"location":"installation/#hacs","text":"To install Home Alarm easily I recommend to install it by HACS. You need to enable AppDeamon Apps in your HACS integration and then search the repository by name.","title":"HACS"},{"location":"installation/#manual","text":"To install Home Alarm manually you have to download the home_alarm directory inside apps folder, copy it to your /config/appdeamon/apps directory in HA and rename it to home-alarm . You must restart AppDeamon.","title":"Manual"},{"location":"installation/#updates","text":"When updating the app is important to restart AppDeamon integration from Supervisor.","title":"Updates"},{"location":"installation/#whats-next","text":"configuration","title":"What's next?"},{"location":"requirements/","text":"Requirements For run successfully this application you have to take into account the following: At least one window/door sensor configured Safe Mode as an input_boolean configured in HA Have a media player configured in HA At least one notifier","title":"Requirements"},{"location":"requirements/#requirements","text":"For run successfully this application you have to take into account the following: At least one window/door sensor configured Safe Mode as an input_boolean configured in HA Have a media player configured in HA At least one notifier","title":"Requirements"},{"location":"alerts/light/","text":"Light Alert Attributes Name Type Required Default Description id string yes Light Alert identifier, value should be light lights array yes [] List of lights. Example alerts : - id : light lights : - light.livingroom - light.bedroom","title":"Light"},{"location":"alerts/light/#light-alert","text":"","title":"Light Alert"},{"location":"alerts/light/#attributes","text":"Name Type Required Default Description id string yes Light Alert identifier, value should be light lights array yes [] List of lights.","title":"Attributes"},{"location":"alerts/light/#example","text":"alerts : - id : light lights : - light.livingroom - light.bedroom","title":"Example"},{"location":"alerts/media_player/","text":"Media Player Alert Attributes Name Type Required Default Description id string yes Media Player Alert identifier, value should be media_player media_players array yes [] Media player devices to reproduce the alarm sound. sound string yes If Alexa get the name of sound from here , otherwise other media players specify the full path of the mp3 track. loop_delay int no None Time to reproduce again sound attribute. If sound duration is 4secs, loop_delay has to be 4. volume float no 1 Volume to reproduce the alarm sound. From 0 to 1.","title":"Media Player"},{"location":"alerts/media_player/#media-player-alert","text":"","title":"Media Player Alert"},{"location":"alerts/media_player/#attributes","text":"Name Type Required Default Description id string yes Media Player Alert identifier, value should be media_player media_players array yes [] Media player devices to reproduce the alarm sound. sound string yes If Alexa get the name of sound from here , otherwise other media players specify the full path of the mp3 track. loop_delay int no None Time to reproduce again sound attribute. If sound duration is 4secs, loop_delay has to be 4. volume float no 1 Volume to reproduce the alarm sound. From 0 to 1.","title":"Attributes"},{"location":"alerts/notifier/","text":"Notifier Alert Attributes Name Type Required Default Description id string yes Notifier Alert identifier, value should be notifier notifiers array yes [] List of notifiers to send the alert. title string no \"ALERT! [ Customize the title of the notification message string no \"[ Customize the message of the notification. Tip For title and message you can write {sensor} inside the string in order to know what sensor has been fired.","title":"Notifier"},{"location":"alerts/notifier/#notifier-alert","text":"","title":"Notifier Alert"},{"location":"alerts/notifier/#attributes","text":"Name Type Required Default Description id string yes Notifier Alert identifier, value should be notifier notifiers array yes [] List of notifiers to send the alert. title string no \"ALERT! [ Customize the title of the notification message string no \"[ Customize the message of the notification. Tip For title and message you can write {sensor} inside the string in order to know what sensor has been fired.","title":"Attributes"},{"location":"alerts/switch/","text":"Switch Alert Attributes Name Type Required Default Description id string yes Switch Alert identifier, value should be switch switches array yes [] List of switches. Example alerts : - id : switch lights : - switch.bedroom - switch.livingroom","title":"Switch"},{"location":"alerts/switch/#switch-alert","text":"","title":"Switch Alert"},{"location":"alerts/switch/#attributes","text":"Name Type Required Default Description id string yes Switch Alert identifier, value should be switch switches array yes [] List of switches.","title":"Attributes"},{"location":"alerts/switch/#example","text":"alerts : - id : switch lights : - switch.bedroom - switch.livingroom","title":"Example"},{"location":"alerts/xiaomi_gateway/","text":"Xiaomi Gateway Alert Attributes Name Type Required Default Description id string yes Xiaomi Gateway Alert identifier, value should be xiaomi_gateway gw_mac array yes [] List of Xiaomi Gateways mac addresses. ringtone_id int yes Check the available ringtones from here . ringtone_vol int no 100 Volume of xiaomi gateway. From 0 to 100. Example alerts : - id : xiaomi_gateway gw_mac : - xxxxxxxxxxxx - yyyyyyyyyyyy ringtone_id : 2 ringtone_vol : 100","title":"Xiaomi Gateway"},{"location":"alerts/xiaomi_gateway/#xiaomi-gateway-alert","text":"","title":"Xiaomi Gateway Alert"},{"location":"alerts/xiaomi_gateway/#attributes","text":"Name Type Required Default Description id string yes Xiaomi Gateway Alert identifier, value should be xiaomi_gateway gw_mac array yes [] List of Xiaomi Gateways mac addresses. ringtone_id int yes Check the available ringtones from here . ringtone_vol int no 100 Volume of xiaomi gateway. From 0 to 100.","title":"Attributes"},{"location":"alerts/xiaomi_gateway/#example","text":"alerts : - id : xiaomi_gateway gw_mac : - xxxxxxxxxxxx - yyyyyyyyyyyy ringtone_id : 2 ringtone_vol : 100","title":"Example"},{"location":"config/","text":"Configuration Basic This is a quick example about how to configure the application with 2 Alexas as media players, 2 window/door sensors and 1 motion sensor. home_alarm : module : home_alarm class : HomeAlarm sensors : - binary_sensor.livingroom_window_contact - binary_sensor.entrance_door_contact - binary_sensor.entrance_motion_occupancy safe_mode : input_boolean.safe_mode alerts : - id : media_player sound : amzn_sfx_scifi_alarm_04 loop_delay : 4 media_players : - media_player.alexa - media_player.alexa2 - id : notifier notifiers : - notify.mobile_app_iphone - notify.notifier Advanced Example of an advanced configuration. I recommend to take a look Attributes section. home_alarm : module : home_alarm class : HomeAlarm sensors : - binary_sensor.livingroom_window_contact - binary_sensor.entrance_door_contact - binary_sensor.entrance_motion_occupancy safe_mode : input_boolean.safe_mode safe_mode_delay : 90 activation_delay : 10 stop_delay : 240 alerts : - id : media_player sound : amzn_sfx_scifi_alarm_04 loop_delay : 4 volume : 0.8 media_players : - media_player.alexa - media_player.alexa2 - id : notifier notifiers : - notify.mobile_app_iphone - notify.notifier title : \"ALARM ALERT! {sensor}\" message : \"Alarm has been fired from {sensor} sensor\" IMPORTANT NOTE sound and loop_delay are linked variables. If the track specified at sound is too short, you will want to repeat it continuously specifying the attribute loop_delay as the same as the sound track duration. Attributes Generic Name Type Required Default Description sensors array yes [] Windows and doors binary sensors. safe_mode string yes Safe mode input boolean. If true protected mode enabled, otherwise false protected mode disabled. safe_mode_delay int no 60 Time the user has to leave the house after safe_mode sensor is changed to ON state. activation_delay int no 15 Time that user has to be identified in the system. If user is not identified, alarm will be fired. stop_delay int no 180 Time to stop alarm after been fired. alerts array yes [] List of alerts (view supported alerts on the alerts section) Alerts Media Player Alerts Notifier Alerts Xiaomi Gateway Alerts Light Alerts Switch Alerts","title":"Main Configuration"},{"location":"config/#configuration","text":"","title":"Configuration"},{"location":"config/#basic","text":"This is a quick example about how to configure the application with 2 Alexas as media players, 2 window/door sensors and 1 motion sensor. home_alarm : module : home_alarm class : HomeAlarm sensors : - binary_sensor.livingroom_window_contact - binary_sensor.entrance_door_contact - binary_sensor.entrance_motion_occupancy safe_mode : input_boolean.safe_mode alerts : - id : media_player sound : amzn_sfx_scifi_alarm_04 loop_delay : 4 media_players : - media_player.alexa - media_player.alexa2 - id : notifier notifiers : - notify.mobile_app_iphone - notify.notifier","title":"Basic"},{"location":"config/#advanced","text":"Example of an advanced configuration. I recommend to take a look Attributes section. home_alarm : module : home_alarm class : HomeAlarm sensors : - binary_sensor.livingroom_window_contact - binary_sensor.entrance_door_contact - binary_sensor.entrance_motion_occupancy safe_mode : input_boolean.safe_mode safe_mode_delay : 90 activation_delay : 10 stop_delay : 240 alerts : - id : media_player sound : amzn_sfx_scifi_alarm_04 loop_delay : 4 volume : 0.8 media_players : - media_player.alexa - media_player.alexa2 - id : notifier notifiers : - notify.mobile_app_iphone - notify.notifier title : \"ALARM ALERT! {sensor}\" message : \"Alarm has been fired from {sensor} sensor\" IMPORTANT NOTE sound and loop_delay are linked variables. If the track specified at sound is too short, you will want to repeat it continuously specifying the attribute loop_delay as the same as the sound track duration.","title":"Advanced"},{"location":"config/#attributes","text":"","title":"Attributes"},{"location":"config/#generic","text":"Name Type Required Default Description sensors array yes [] Windows and doors binary sensors. safe_mode string yes Safe mode input boolean. If true protected mode enabled, otherwise false protected mode disabled. safe_mode_delay int no 60 Time the user has to leave the house after safe_mode sensor is changed to ON state. activation_delay int no 15 Time that user has to be identified in the system. If user is not identified, alarm will be fired. stop_delay int no 180 Time to stop alarm after been fired. alerts array yes [] List of alerts (view supported alerts on the alerts section)","title":"Generic"},{"location":"config/#alerts","text":"Media Player Alerts Notifier Alerts Xiaomi Gateway Alerts Light Alerts Switch Alerts","title":"Alerts"},{"location":"config/alexa/","text":"Alexa has a peculiarity about how to reproduce sounds when acting as a media player. Alexa is limited to reproduce sounds that are only in their directory of sounds . Choose the sound most you like and assign it to the sound attribute at yaml. After that figure out at the sound duration and assign the loop_delay variable with the track duration. Example Go to Alexa Skills available sounds and choose one. Get the sound you like most, in my case <audio src=\"soundbank://soundlibrary/scifi/amzn_sfx_scifi_alarm_03\"/> . After that, get the last part of audio like this: amzn_sfx_scifi_alarm_03 and assign it to the sound attribute in apps.yaml Take a look at the duration of the sound and assign it to the loop_delay attribute as: loop_delay: 5 Tip Alexa puts the request in a queue and I recommend truncate the number of track duration. If track duration is 5.96 secs trunc it to 5.","title":"Alexa"},{"location":"config/alexa/#example","text":"Go to Alexa Skills available sounds and choose one. Get the sound you like most, in my case <audio src=\"soundbank://soundlibrary/scifi/amzn_sfx_scifi_alarm_03\"/> . After that, get the last part of audio like this: amzn_sfx_scifi_alarm_03 and assign it to the sound attribute in apps.yaml Take a look at the duration of the sound and assign it to the loop_delay attribute as: loop_delay: 5 Tip Alexa puts the request in a queue and I recommend truncate the number of track duration. If track duration is 5.96 secs trunc it to 5.","title":"Example"},{"location":"config/others/","text":"Google Home and others media players have the ability to play mp3 tracks from internet or locally. That's because you have to adapt the apps.yaml configuration to make that working properly. I recommend to follow the next steps in order to have app well configured. Find a track with mp3 extension from the internet or use one localy. Copy & paste the url to the sound attribute. Figure out at the track duration and fit the loop_delay attribute with the track duration. You can skip this step if your track is greater than stop_delay .","title":"Google Home & Others"}]}